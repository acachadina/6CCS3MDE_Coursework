/**
 * generated by Xtext 2.25.0
 */
package uk.ac.kcl.inf.dotLanguage.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uk.ac.kcl.inf.dotLanguage.DotLanguagePackage;
import uk.ac.kcl.inf.dotLanguage.NodeId;
import uk.ac.kcl.inf.dotLanguage.UndirectedEdgeDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Undirected Edge Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.dotLanguage.impl.UndirectedEdgeDeclarationImpl#getFirstNode <em>First Node</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.dotLanguage.impl.UndirectedEdgeDeclarationImpl#getSecondNode <em>Second Node</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UndirectedEdgeDeclarationImpl extends UndirectedStatementImpl implements UndirectedEdgeDeclaration
{
  /**
   * The cached value of the '{@link #getFirstNode() <em>First Node</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstNode()
   * @generated
   * @ordered
   */
  protected NodeId firstNode;

  /**
   * The cached value of the '{@link #getSecondNode() <em>Second Node</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondNode()
   * @generated
   * @ordered
   */
  protected NodeId secondNode;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UndirectedEdgeDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DotLanguagePackage.Literals.UNDIRECTED_EDGE_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NodeId getFirstNode()
  {
    if (firstNode != null && firstNode.eIsProxy())
    {
      InternalEObject oldFirstNode = (InternalEObject)firstNode;
      firstNode = (NodeId)eResolveProxy(oldFirstNode);
      if (firstNode != oldFirstNode)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__FIRST_NODE, oldFirstNode, firstNode));
      }
    }
    return firstNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NodeId basicGetFirstNode()
  {
    return firstNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirstNode(NodeId newFirstNode)
  {
    NodeId oldFirstNode = firstNode;
    firstNode = newFirstNode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__FIRST_NODE, oldFirstNode, firstNode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NodeId getSecondNode()
  {
    if (secondNode != null && secondNode.eIsProxy())
    {
      InternalEObject oldSecondNode = (InternalEObject)secondNode;
      secondNode = (NodeId)eResolveProxy(oldSecondNode);
      if (secondNode != oldSecondNode)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__SECOND_NODE, oldSecondNode, secondNode));
      }
    }
    return secondNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NodeId basicGetSecondNode()
  {
    return secondNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondNode(NodeId newSecondNode)
  {
    NodeId oldSecondNode = secondNode;
    secondNode = newSecondNode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__SECOND_NODE, oldSecondNode, secondNode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__FIRST_NODE:
        if (resolve) return getFirstNode();
        return basicGetFirstNode();
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__SECOND_NODE:
        if (resolve) return getSecondNode();
        return basicGetSecondNode();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__FIRST_NODE:
        setFirstNode((NodeId)newValue);
        return;
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__SECOND_NODE:
        setSecondNode((NodeId)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__FIRST_NODE:
        setFirstNode((NodeId)null);
        return;
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__SECOND_NODE:
        setSecondNode((NodeId)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__FIRST_NODE:
        return firstNode != null;
      case DotLanguagePackage.UNDIRECTED_EDGE_DECLARATION__SECOND_NODE:
        return secondNode != null;
    }
    return super.eIsSet(featureID);
  }

} //UndirectedEdgeDeclarationImpl
